using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Padi.SharedModel;
using System.Runtime.Remoting.Channels.Tcp;
using System.Runtime.Remoting.Channels;
using System.Runtime.Remoting;

namespace Client
{
    public class Client : MarshalByRefObject, IClient
    {
        //URL of the worker node used to submit jobs
        private string entryURL;

        private readonly TcpChannel channel = null;

        //Hardcoded. Change later
        private readonly int clientPort = 8300;
        private readonly string url = null;



        public Client(string EntryURL)
        {
            Console.WriteLine("Creating the Client...");

            this.channel = new TcpChannel(clientPort);
            this.url = "tcp://" + Util.LocalIPAddress() + ":" + clientPort + "/Client";


            ChannelServices.RegisterChannel(this.channel, false);
            RemotingServices.Marshal(this, "Client", typeof(Client));

            this.entryURL = EntryURL;
        }


        public void Submit(string inputPath, string outputPath, int splits, string className, string dllPath)
        {
            Console.WriteLine("entryURL: " + this.entryURL);

            Console.WriteLine("inputPath: " + inputPath);
            Console.WriteLine("outputPath: " + outputPath);
            Console.WriteLine("splits: " + splits);
            Console.WriteLine("className: " + className);
            Console.WriteLine("dllPath: " + dllPath);
            //TODO: Submit the job to the node in "entryURL".
        }

        private void splitFile(string inputPath, string jobTimestamp)
        {
            //TODO: Implement the split function and save the data to the jobs dictionary
        }

        // Return a split of the input file to a worker node
        public string returnSplit(int splitNumber)
        {


            return null;
        }

        // Obtains the results generated by the processing of a split from a worker node
        public void onSplitDone(string mapContent, int splitNumber) { }


        //All splits processed and returned
        public void onJobDone() { }





    }
}
